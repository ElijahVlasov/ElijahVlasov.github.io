personal:
  name: Ilia Vlasov
  email: elijah.vlasov@gmail.com
  linkedin: linkedin.com/in/elijahvlasov
  twitter: x.com/fastreadsolomon
  site: github.com/ElijahVlasov
  phone: aili.dev
education:
  - name: Kazan Federal University
    degree: Master of Science in Mathematics
    location: Kazan, Russia
    date: Sep. 2018 - Jul. 2020
  - name: Kazan Federal University
    degree: Bachelor of Science in Mathematics
    location: Kazan, Russia
    date: Sep. 2014 - Jul. 2018
experience:
  - role: Cryptography Researcher and Formal Verification Engineer 
    name: Nethermind
    location: London, UK
    date: Mar 2022 - Present
    points:
      - Desinging and optimising cryptographic protocols.
      - Leading a team of 5 engineers implementing cryptographic protocols.
      - Formally verifying security properties of zero-knowledge protocols.
      # - Contributed into development of a Cairo virtual machine written in Golang. Advised on cryptographic aspects.
      # - Worked on a Solidity formal verification tool called Clear.   
      # - Participated in the development of the Horus security analysis tool for Cairo smart contract programming language in Haskell. 
  - role: Research Engineer 
    name: Sofoil
    location: Kazan, Russia
    date: Aug. 2021 - Feb. 2022
    points:
      - Participated in the development of a training simulator for petroleum geologists called PolyPlan.
      - Developed from scratch a microservice that performs calculation of pressure build-up/fall-off in oil wells 
        in the presence of external factors using Python. 
        Assisted senior researchers in developing mathematical models of such behaviour.       
projects:
  - name: LatticeFold
    skills: Rust, Rayon, unsafe Rust, zkSNARKS, lattice-based cryptography.
    date: June 2024 - Dec 2024.
    points:
      - Led the implementation of the first lattice-based cryptographic folding scheme
        called LatticeFold in Rust.
      - Worked on researching opportunities to apply the scheme in the context 
        of scalable transparent arguments of knowledge (STARKs).
      - Worked on a derived folding scheme called OvaL (not yet public).
  - name: Mova folding scheme 
    skills: Rust, Rayon, zkSNARKS, verifiable computation. 
    date: June 2024 - Aug 2024
    points:
      - Co-authored the paper describing the protocol. 
      - Led the proof-of-concept implementation.      
  - name: Verified PLONK verifier
    skills: Solidity, Yul, EasyCrypt, SMT solvers, zkSNARKS.
    date: Jul 2024 - Sep 2024.
    points:
      - Participated in functional formal verification of a PLONK/plookup Yul verifier used by zkSync.
  - name: Formally verified Risc0 zkVM
    skills: Lean4, C++, MLIR, zk circuits, RISC-V.
    date: Jun 2023 - Aug 2023.
    points:
      - Proving formal correctness of zk circuits implementing a zero-knowledge RISC-V virtual machine.
      - Proving correctness of the instruction decoder in the CPU execution pipeline.
skills: 
  - category: Programming languages
    skills: Rust, Haskell, Golang, C/C++, Python, Java.
  - category: Database management systems
    skills: SQLite, MySQL, PostgreSQL, Redis.
  - category: Backend frameworks
    skills: Django, Spring.
  - category: Cryptography 
    skills: Public-key encryption, cryptographic hash functions, SNARKS/STARKS, Lattice-based cryptography.  
  - category: Zero-knowledge languages and frameworks
    skills: Circom, Halo2, Plonky3.
  - category: Developer Tools
    skills: git, bash scripting, Docker, Kubernetes, Github CI/CD actions, vim. 
